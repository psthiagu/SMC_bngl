# Implementation of the parabola from the Mitra constrained optimization manuscript Fig. 1

begin model

  begin parameters

# Original values used 
# (a,b,c,d,e,f,g) = 0.3, 1, 27, 70, 21, 5, 0.8

    a 0.3
    b 1
    c 27
    d 70
    e 21
    f 5
    g 0.8

  end parameters

  begin molecule types
    counter()
  end molecule types

  begin seed species
    # initial conditions
    counter() 0
  end seed species

  begin observables
    Molecules x counter()
  end observables

  begin functions

    y1()=a*x^4-b*x^3+c*x^2-d*x+e
    y2()=g*x^4-f*x^3+e*x^2-d*x+c
  end functions

  begin reaction rules
    0->counter() 1
  end reaction rules

end model

# generate_network()
# writeSBML()
# generate_network({overwrite=>1})
# simulate({method=>"ode",t_start=>0,t_end=>10,n_steps=>1000,suffix=>"wt",print_functions=>1})
# # "Mutate" a parameter, and simulate a second time
# setParameter("d",27)
# resetConcentrations()
# simulate({method=>"ode",t_start=>0,t_end=>10,n_steps=>1000,suffix=>"mut",print_functions=>1})
